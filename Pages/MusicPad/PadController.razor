@page "/audiopad"
@using Microsoft.AspNetCore.Authorization
@inject ISoundPlayer SoundPlayer
@attribute [Authorize]

<style>
    .main{
    margin-left:auto;
    margin-right:auto;
    width:600px;
    height:600px;
}

.surface{
    background-color:#0C0E0C;
    display:flex;
    flex-flow:row wrap;
    justify-content:center;
    align-content:center;
    margin-left:auto;
    margin-right:auto;
    outline:none;
    border-radius:20px;
}

h1{
    color:white;
}
</style>

<div class="main">
    <h1>BlazorPad</h1>
    <div class="surface" @ref="surfaceRef" tabindex="0" @onkeypress="OnKeyPressed" >
        @foreach (var pad in pads)
        {
            <Pad PadModel="@pad" />
        }
    </div>
</div>

@code {

    private IList<PadModel> pads = new List<PadModel>
    {
        new PadModel("piano", "/audio/piano.mp3", "r"),
        new PadModel("strings", "/audio/strings.mp3", "t"),
        new PadModel("bass", "/audio/bass.mp3", "y"),
        new PadModel("kick", "/audio/kick.mp3", "f"),
        new PadModel("snare", "/audio/snare.mp3", "g"),
        new PadModel("hihat", "/audio/hihat.mp3", "h"),
        new PadModel("fx1", "/audio/fx1.mp3", "v"),
        new PadModel("fx2", "/audio/fx2.mp3", "b"),
        new PadModel("fx3", "/audio/fx3.mp3", "n")
    };

    private ElementReference surfaceRef;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && surfaceRef.Context is not null)
        {
            await surfaceRef.FocusAsync();
        }
    }

    private async Task OnKeyPressed(KeyboardEventArgs args)
    {
        await PlaySound(GetPressedPad(args.Key));
    }

    private PadModel GetPressedPad(string key)
    => pads.SingleOrDefault(p => p.Key == key);

    private async Task PlaySound(PadModel padModel)
    {
        if (padModel == null) return;
        await SoundPlayer.Play(padModel.SoundLocation, padModel.Id);
    }
}
