@page "/editprogram/{id}"
@using HosxpUi.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<p><strong>แก้ไข Version Program</strong></p>
<hr />
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="VersionName" class="control-label">รายการ</label>
                <input id="VersionName" class="form-control" @bind="@program.VersionName" />
            </div>
            <div class="form-group">
                <label for="VersionDetail" class="control-label">รายละเอียด</label>
                @* <input id="VersionDetail" class="form-control" @bind="@program.VersionDetail" /> *@
                <textarea id="VersionDetail" class="form-control" rows="4" @bind="@program.VersionDetail"></textarea>
            </div>
            <div class="form-group">
                <label for="VersionDate" class="control-label">วันที่</label>
                <input id="VersionDate" type="date" class="form-control" @bind="@program.VersionDate" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@UpdateProgram" value="บันทึก" />
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    private HubConnection hubConnection;
    [Parameter]
    public string id { get; set; }

    VersionProgram program = new VersionProgram();

    protected override async Task OnInitializedAsync()
    {
        program = await Http.GetFromJsonAsync<VersionProgram>("api/VersionProgram/Get/" + id);

       // Get Base URL from HttpClient
        var baseUrl = Http.BaseAddress?.ToString() ?? NavigationManager.BaseUri;
        var hubUrl = $"{baseUrl}broadcastHub"; // Append the Hub route
        
        hubConnection = new HubConnectionBuilder()
            .WithUrl(hubUrl)
            .Build();

        await hubConnection.StartAsync();
    }

    protected async Task UpdateProgram()
    {
        await Http.PutAsJsonAsync($"api/VersionProgram/Put/{id}", program);
        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("/allversion");
    }

    Task SendMessage() => hubConnection.SendAsync("SendMessage");

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/allversion");
    }
}
